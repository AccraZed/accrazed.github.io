{"version":3,"sources":["Trim.tsx","Projects.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Trim","position","id","className","projects","title","description","link","Projects","React","useState","selected","setSelected","list","map","project","i","onClick","card","window","open","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wLAgBeA,EAXa,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3B,OACI,sBAAKC,GAAID,EAAT,UACI,qBAAKE,UAAU,YACf,qBAAKA,UAAU,iBAAf,SACI,qBAAKA,UAAU,wB,OCCzBC,EAAsB,CACxB,CACIF,GAAI,kBACJG,MAAO,kBACPC,YACI,gLACJC,KAAM,+CAEV,CACIL,GAAI,WACJG,MAAO,6BACPC,YACI,4KACJC,KAAM,uDAmDCC,EA/CY,WAAoB,IAAD,EACVC,IAAMC,UAAU,GADN,mBACnCC,EADmC,KACzBC,EADyB,KAGtCC,EAAOT,EAASU,KAAI,SAACC,EAAkBC,GACvC,OACI,qBACIb,UAAW,oBAAsBa,IAAML,EAAW,YAAc,IAChEM,QAAS,kBAAwBL,EAAjBD,IAAaK,GAAiB,EAAiBA,IAFnE,SAKI,sBAAKb,UAAU,mBAAf,UACI,qBAAKA,UAAU,WACf,+BAAO,IAAMY,EAAQV,MAAQ,UAJ5BU,EAAQb,GAAKc,MAU1BE,EAAO,wBAkBX,OAjBiB,GAAbP,IACAO,EACI,sBAAKf,UAAU,OAAf,UACI,sBAAKA,UAAU,cAAf,UACI,+BAAOC,EAASO,GAAUN,QAC1B,qBAAKF,UAAU,UAAUc,QAAS,kBAAME,OAAOC,KAAKhB,EAASO,GAAUJ,YAE3E,sBAAKJ,UAAU,YAAf,UACI,qBAAKA,UAAU,eACf,qBAAKA,UAAU,mBAAf,SAAmCC,EAASO,GAAUL,cACtD,qBAAKH,UAAU,iBACf,qBAAKA,UAAU,4BAO3B,sBAAKA,UAAU,WAAf,UACI,sBAAKA,UAAU,uBAAf,UACI,yCACA,qBAAKA,UAAU,OAAf,SAAuBU,OAE1BK,MC9CEG,MAnBf,WACI,OACI,sBAAKlB,UAAU,MAAf,UACI,cAAC,EAAD,CAAMF,SAAS,WAEf,sBAAKE,UAAU,OAAf,UACI,qBAAKA,UAAU,YAAf,6BACA,qBAAKA,UAAU,mBAAf,sGAIA,cAAC,EAAD,OAGJ,cAAC,EAAD,CAAMF,SAAS,eCLZqB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM5Bb,K","file":"static/js/main.bc3b3ec5.chunk.js","sourcesContent":["import React, { FC } from 'react';\ninterface TrimProps {\n    position: 'header' | 'footer';\n}\n\nconst Trim: FC<TrimProps> = ({ position }) => {\n    return (\n        <div id={position}>\n            <div className=\"pattern\"></div>\n            <div className=\"container-trim\">\n                <div className=\"pattern-inner\"></div>\n            </div>\n        </div>\n    );\n};\n\nexport default Trim;\n","import { profile } from 'console';\nimport React, { FC } from 'react';\n\ntype Project = {\n    id: string;\n    title: string;\n    description: string;\n    link: string;\n    image?: string;\n};\n\nconst projects: Project[] = [\n    {\n        id: 'node_run_script',\n        title: 'Node Run Script',\n        description:\n            'Golang-based buildpack for the open-source community Paketo. Allows for automatic building of framework apps like React, Angular, or Vue before turning them into OCI images.',\n        link: 'https://github.com/AccraZed/node-run-script',\n    },\n    {\n        id: 'yorha_ui',\n        title: 'YoRHa UI for BetterDiscord',\n        description:\n            \"SASS-based streamlined environment for a project that completely replaces Discord's default UI. Received over 60 thousand downloads and was featured on PC Gamer Magazine\",\n        link: 'https://github.com/AccraZed/YoRHA-UI-BetterDiscord',\n    },\n];\n\nconst Projects: Function = (): JSX.Element => {\n    const [selected, setSelected] = React.useState(-1);\n\n    let list = projects.map((project: Project, i: number) => {\n        return (\n            <div\n                className={'selectable-outer' + (i === selected ? '-selected' : '')}\n                onClick={() => (selected === i ? setSelected(-1) : setSelected(i))}\n                key={project.id + i}\n            >\n                <div className=\"selectable-inner\">\n                    <div className=\"bullet\" />\n                    <span>{' ' + project.title + ' '}</span>\n                </div>\n            </div>\n        );\n    });\n\n    let card = <div />;\n    if (selected != -1) {\n        card = (\n            <div className=\"card\">\n                <div className=\"card-header\">\n                    <span>{projects[selected].title}</span>\n                    <div className=\"gh-icon\" onClick={() => window.open(projects[selected].link)} />\n                </div>\n                <div className=\"card-body\">\n                    <div className=\"card-image\"></div>\n                    <div className=\"card-description\">{projects[selected].description}</div>\n                    <div className=\"card-divider\"></div>\n                    <div className=\"card-description\"></div>\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"projects\">\n            <div className=\"txt-subtitle section\">\n                <p>Projects</p>\n                <div className=\"list\">{list}</div>\n            </div>\n            {card}\n        </div>\n    );\n};\n\nexport default Projects;\n","import React from 'react';\nimport './css/style.css';\nimport Trim from './Trim';\nimport Projects from './Projects';\n\nfunction App() {\n    return (\n        <div className=\"app\">\n            <Trim position=\"header\" />\n\n            <div className=\"main\">\n                <div className=\"txt-title\">Amelia Castilla</div>\n                <div className=\"txt-subtitle tag\">\n                    Software developer and CS major / Philosophy minor at the University of Central\n                    Florida.\n                </div>\n                <Projects />\n            </div>\n\n            <Trim position=\"footer\" />\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/style.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}